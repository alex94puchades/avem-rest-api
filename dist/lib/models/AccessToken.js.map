{"version":3,"sources":["lib/models/AccessToken.js"],"names":[],"mappings":";;;;;;;;sBAAc,QAAQ;;;;oBACL,MAAM;;;;wBACQ,UAAU;;;;uBAErB,WAAW;;;;sBACZ,iBAAiB;;;;AAEpC,SAAS,WAAW,GAAG;AACtB,QAAO,uBAAK,oBAAO,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;CACxC;;AAED,IAAM,iBAAiB,GAAG,cATR,MAAM,CASa;AACpC,MAAK,EAAE;AACN,MAAI,EAAE,MAAM;AACZ,OAAK,EAAE,IAAI;AACX,QAAM,EAAE,IAAI;AACZ,UAAQ,EAAE,IAAI;AACd,aAAS,WAAW;EACpB;AACD,QAAO,EAAE;AACR,MAAI,EAAE,UAlBU,MAAM,CAkBT,QAAQ;AACrB,KAAG,EAAE,SAAS;AACd,OAAK,EAAE,IAAI;AACX,UAAQ,EAAE,IAAI;EACd;AACD,eAAc,EAAE;AACf,MAAI,EAAE,IAAI;AACV,UAAQ,EAAE,IAAI;EACd;CACD,CAAC,CAAC;;AAEH,iBAAiB,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,YAAW;AACnD,QAAO,CAAC,oBAAE,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,IAC9B,IAAI,CAAC,cAAc,KAAK,QAAQ,CAAC;CACxC,CAAC,CAAC;;AAEH,iBAAiB,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,YAAW;AACnD,QAAO,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,IAAI,EAAA,CAAC;CACvD,CAAC,CAAC;;AAEH,iBAAiB,CAAC,GAAG,CAAC,MAAM,EAAE,UAAS,IAAI,EAAE;AAC5C,sBAAQ,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,UAAC,GAAG,EAAE,OAAO,EAAK;AAChD,MAAI,GAAG,IAAI,CAAC,OAAO,EAAE,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;AACtC,IAAE,OAAO,CAAC,UAAU,CAAC;AACrB,SAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EACnB,CAAC,CAAC;CACH,CAAC,CAAC;;AAEH,iBAAiB,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAS,IAAI,EAAE;AAC9C,sBAAQ,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,UAAC,GAAG,EAAE,OAAO,EAAK;AAChD,MAAI,GAAG,IAAI,CAAC,OAAO,EAAE,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;AACtC,MAAI,EAAE,OAAO,CAAC,UAAU,IAAI,CAAC,EAC5B,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC7B,SAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EACnB,CAAC,CAAC;CACH,CAAC,CAAC;;qBAEY,sBAAS,KAAK,CAAC,aAAa,EAAE,iBAAiB,CAAC","file":"lib/models/AccessToken.js","sourcesContent":["import _ from 'lodash';\nimport uid2 from 'uid2';\nimport mongoose, {Schema} from 'mongoose';\n\nimport Session from './Session';\nimport config from '../../../config';\n\nfunction randomToken() {\n\treturn uid2(config.oauth2.token.length);\n}\n\nconst accessTokenSchema = new Schema({\n\tvalue: {\n\t\ttype: String,\n\t\tindex: true,\n\t\tunique: true,\n\t\trequired: true,\n\t\tdefault: randomToken,\n\t},\n\tsession: {\n\t\ttype: Schema.ObjectId,\n\t\tref: 'Session',\n\t\tindex: true,\n\t\trequired: true,\n\t},\n\texpirationDate: {\n\t\ttype: Date,\n\t\trequired: true,\n\t},\n});\n\naccessTokenSchema.virtual('expires').get(function() {\n\treturn !_.isNull(this.expirationDate) &&\n\t       this.expirationDate !== Infinity;\n});\n\naccessTokenSchema.virtual('expired').get(function() {\n\treturn this.expires && this.expirationDate <= new Date;\n});\n\naccessTokenSchema.pre('save', function(next) {\n\tSession.findById(this.session, (err, session) => {\n\t\tif (err || !session) return next(err);\n\t\t++session.references;\n\t\tsession.save(next);\n\t});\n});\n\naccessTokenSchema.pre('remove', function(next) {\n\tSession.findById(this.session, (err, session) => {\n\t\tif (err || !session) return next(err);\n\t\tif (--session.references <= 0)\n\t\t\treturn session.remove(next);\n\t\tsession.save(next);\n\t});\n});\n\nexport default mongoose.model('AccessToken', accessTokenSchema);\n"],"sourceRoot":"/source/"}