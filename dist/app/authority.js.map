{"version":3,"sources":["app/authority.js"],"names":[],"mappings":";;;;;;;;sBAAc,QAAQ;;;;wBACD,WAAW;;;;0BAEf,eAAe;;;;0BACf,eAAe;;;;AAEhC,IAAM,SAAS,GAAG,2BAAS;AAC1B,QAAO,EAAE,iBAAC,GAAG,EAAE,QAAQ,EAAK;AAC3B,UAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACzB;;AAED,YAAW,EAAE,qBAAC,IAAI,EAAE,QAAQ,EAAK;AAChC,0BAAK,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;EACnC;;AAED,iBAAgB,EAAE,0BAAS,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE;AAChD,UAAQ,CAAC,IAAI,EAAE,oBAAE,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;EAClD;CACD,CAAC,CAAC;;qBAEY,SAAS;AACjB,IAAM,QAAQ,GAAG,oBAAE,QAAQ,CAAC,sBAAS,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;QAApD,QAAQ,GAAR,QAAQ;AACd,IAAM,gBAAgB,GAAG,sBAAS,gBAAgB,CAAC;QAA7C,gBAAgB,GAAhB,gBAAgB","file":"app/authority.js","sourcesContent":["import _ from 'lodash';\nimport authRbac from 'auth-rbac';\n\nimport User from './models/User';\nimport Role from './models/Role';\n\nconst authority = authRbac({\n\tgetUser: (req, callback) => {\n\t\tcallback(null, req.user);\n\t},\n\t\n\tuserGetRole: (user, callback) => {\n\t\tRole.findById(user.role, callback);\n\t},\n\t\n\troleHasPrivilege: function(role, priv, callback) {\n\t\tcallback(null, _.contains(role.privileges, priv));\n\t},\n});\n\nexport default authority;\nexport const identify = _.constant(authRbac.identify(authority));\nexport const requirePrivilege = authRbac.requirePrivilege;\n"],"sourceRoot":"/source/"}