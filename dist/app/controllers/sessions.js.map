{"version":3,"sources":["app/controllers/sessions.js"],"names":[],"mappings":"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","file":"app/controllers/sessions.js","sourcesContent":["import {Router} from 'express';\nimport jsonapify, {Resource, Property, Template, Ref} from 'jsonapify';\n\nimport * as common from './common';\nimport * as logger from '../logger';\nimport {Session} from '../models';\nimport {resource as userResource} from './users';\nimport {resource as clientResource} from './clients';\n\nconst sessionResource = new Resource(Session, {\n\t'type': 'sessions',\n\t'id': {\n\t\tvalue: new Property('_id'),\n\t\twritable: false,\n\t},\n\t'links': {\n\t\t'self': {\n\t\t\tvalue: new Template('/sessions/${_id}'),\n\t\t\twritable: false,\n\t\t},\n\t},\n\t'relationships': {\n\t\t'user': {\n\t\t\tvalue: new Ref(userResource, 'user'),\n\t\t\twritable: false,\n\t\t},\n\t\t'owner-client': {\n\t\t\tvalue: new Ref(clientResource, 'ownerClient'),\n\t\t\twritable: false,\n\t\t},\n\t},\n});\n\nvar router = Router();\n\nrouter.get('/',\n\tcommon.authenticate('token-bearer'),\n\tcommon.requirePrivilege('session:enum'),\n\tjsonapify.enumerate(sessionResource),\n\tlogger.logErrors(), jsonapify.errorHandler());\n\nfunction ifNotSessionOwner(priv) {\n\treturn (req, callback) => {\n\t\tvar user = req.auth.user.info;\n\t\tvar sessionId = req.params.id;\n\t\tSession.findById(sessionId, (err, session) => {\n\t\t\tif (err || !session) return callback(err, false);\n\t\t\tcallback(null, session.user.equals(user._id) ? false : priv);\n\t\t});\n\t};\n}\n\nrouter.get('/:id',\n\tcommon.authenticate('token-bearer'),\n\tcommon.requirePrivilege(ifNotSessionOwner('session:read')),\n\tjsonapify.read([sessionResource, jsonapify.param('id')]),\n\tlogger.logErrors(), jsonapify.errorHandler());\n\nrouter.get('/:id',\n\tcommon.authenticate('token-bearer'),\n\tcommon.requirePrivilege(ifNotSessionOwner('session:edit')),\n\tjsonapify.update([sessionResource, jsonapify.param('id')]),\n\tlogger.logErrors(), jsonapify.errorHandler());\n\nrouter.delete('/:id',\n\tcommon.authenticate('token-bearer'),\n\tcommon.requirePrivilege(ifNotSessionOwner('session:remove')),\n\tjsonapify.remove([sessionResource, jsonapify.param('id')]),\n\tlogger.logErrors(), jsonapify.errorHandler());\n\nexport default router;\nexport { sessionResource as resource };\n"],"sourceRoot":"/source/"}