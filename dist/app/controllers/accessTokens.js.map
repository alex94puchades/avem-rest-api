{"version":3,"sources":["app/controllers/accessTokens.js"],"names":[],"mappings":";;;;;;;;;;uBAAqB,SAAS;;yBAC6B,WAAW;;;;sBAE9C,UAAU;;IAAtB,MAAM;;sBACM,WAAW;;IAAvB,MAAM;;sBACQ,WAAW;;wBACK,YAAY;;AAEtD,IAAM,mBAAmB,GAAG,eAPT,QAAQ,SAInB,WAAW,EAGmC;AACrD,OAAM,EAAE,eAAe;AACvB,KAAI,EAAE;AACL,OAAK,EAAE,eAV8B,QAAQ,CAUzB,OAAO,CAAC;AAC5B,UAAQ,EAAE,KAAK;EACf;AACD,QAAO,EAAE;AACR,QAAM,EAAE;AACP,QAAK,EAAE,eAfmB,QAAQ,CAed,yBAAyB,CAAC;AAC9C,WAAQ,EAAE,KAAK;GACf;EACD;AACD,aAAY,EAAE;AACb,WAAS,EAAE;AACV,QAAK,EAAE,eArB6B,QAAQ,CAqBxB,SAAS,CAAC;AAC9B,WAAQ,EAAE,KAAK;GACf;AACD,WAAS,EAAE;AACV,QAAK,EAAE,eAzB6B,QAAQ,CAyBxB,SAAS,CAAC;AAC9B,WAAQ,EAAE,KAAK;GACf;AACD,mBAAiB,EAAE;AAClB,QAAK,EAAE,eA7B6B,QAAQ,CA6BxB,gBAAgB,CAAC;AACrC,WAAQ,EAAE,IAAI;GACd;EACD;AACD,gBAAe,EAAE;AAChB,WAAS,EAAE;AACV,QAAK,EAAE,eAnCuC,GAAG,WAK5C,QAAQ,EA8BmB,SAAS,CAAC;AAC1C,WAAQ,EAAE,KAAK;GACf;EACD;CACD,CAAC,CAAC;;AAEH,IAAM,MAAM,GAAG,aA1CP,MAAM,GA0CS,CAAC;;AAExB,MAAM,CAAC,GAAG,CAAC,GAAG,EACb,MAAM,CAAC,YAAY,CAAC,cAAc,CAAC,EACnC,MAAM,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,EAC5C,uBAAU,SAAS,CAAC,mBAAmB,CAAC,EACxC,MAAM,CAAC,SAAS,EAAE,EAAE,uBAAU,YAAY,EAAE,CAAC,CAAC;;AAE/C,SAAS,eAAe,CAAC,IAAI,EAAE;AAC9B,QAAO,UAAC,GAAG,EAAK;AACf,MAAI,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC;AAC7B,MAAI,MAAM,GAAG,MAAM,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;AAC5C,SAAO,KAAK,KAAK,MAAM,GAAG,IAAI,GAAG,KAAK,CAAC;EACvC,CAAC;CACF;;AAED,MAAM,CAAC,GAAG,CAAC,SAAS,EACnB,MAAM,CAAC,YAAY,CAAC,cAAc,CAAC,EACnC,MAAM,CAAC,gBAAgB,CAAC,eAAe,CAAC,mBAAmB,CAAC,CAAC,EAC7D,uBAAU,IAAI,CAAC,CAAC,mBAAmB,EAAE,EAAE,KAAK,EAAE,uBAAU,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,EAC1E,MAAM,CAAC,SAAS,EAAE,EAAE,uBAAU,YAAY,EAAE,CAAC,CAAC;;AAE/C,MAAM,UAAO,CAAC,SAAS,EACtB,MAAM,CAAC,YAAY,CAAC,cAAc,CAAC,EACnC,MAAM,CAAC,gBAAgB,CAAC,eAAe,CAAC,qBAAqB,CAAC,CAAC,EAC/D,uBAAU,MAAM,CAAC,CAAC,mBAAmB,EAAE,EAAE,KAAK,EAAE,uBAAU,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,EAC5E,MAAM,CAAC,SAAS,EAAE,EAAE,uBAAU,YAAY,EAAE,CAAC,CAAC;;qBAEhC,MAAM;QACW,QAAQ,GAA/B,mBAAmB","file":"app/controllers/accessTokens.js","sourcesContent":["import {Router} from 'express';\nimport jsonapify, {Resource, Template, Property, Ref} from 'jsonapify';\n\nimport * as common from './common';\nimport * as logger from '../logger';\nimport {AccessToken} from '../models';\nimport {resource as sessionResource} from './sessions';\n\nconst accessTokenResource = new Resource(AccessToken, {\n\t'type': 'access-tokens',\n\t'id': {\n\t\tvalue: new Property('value'),\n\t\twritable: false,\n\t},\n\t'links': {\n\t\t'self': {\n\t\t\tvalue: new Template('/access-tokens/${value}'),\n\t\t\twritable: false,\n\t\t},\n\t},\n\t'attributes': {\n\t\t'expires': {\n\t\t\tvalue: new Property('expires'),\n\t\t\twritable: false,\n\t\t},\n\t\t'expired': {\n\t\t\tvalue: new Property('expired'),\n\t\t\twritable: false,\n\t\t},\n\t\t'expiration-date': {\n\t\t\tvalue: new Property('expirationDate'),\n\t\t\tnullable: true,\n\t\t},\n\t},\n\t'relationships': {\n\t\t'session': {\n\t\t\tvalue: new Ref(sessionResource, 'session'),\n\t\t\twritable: false,\n\t\t},\n\t},\n});\n\nconst router = Router();\n\nrouter.get('/',\n\tcommon.authenticate('token-bearer'),\n\tcommon.requirePrivilege('access-token:enum'),\n\tjsonapify.enumerate(accessTokenResource),\n\tlogger.logErrors(), jsonapify.errorHandler());\n\nfunction ifNotTokenOwner(priv) {\n\treturn (req) => {\n\t\tlet token = req.params.value;\n\t\tlet bearer = common.extractAccessToken(req);\n\t\treturn token !== bearer ? priv : false;\n\t};\n}\n\nrouter.get('/:value',\n\tcommon.authenticate('token-bearer'),\n\tcommon.requirePrivilege(ifNotTokenOwner('access-token:read')),\n\tjsonapify.read([accessTokenResource, { value: jsonapify.param('value') }]),\n\tlogger.logErrors(), jsonapify.errorHandler());\n\nrouter.delete('/:value',\n\tcommon.authenticate('token-bearer'),\n\tcommon.requirePrivilege(ifNotTokenOwner('access-token:remove')),\n\tjsonapify.remove([accessTokenResource, { value: jsonapify.param('value') }]),\n\tlogger.logErrors(), jsonapify.errorHandler());\n\nexport default router;\nexport { accessTokenResource as resource };\n"],"sourceRoot":"/source/"}